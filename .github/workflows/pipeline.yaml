name: "guardduty_infra"

on:
  workflow_dispatch:
    inputs:
      terraform-action:
        description: 'Choose Terraform action (Available options: plan, apply, destroy)'
        required: true
        default: 'plan'
      branch:
        description: 'Specify the branch to run Terraform (e.g., feature/my-branch)'
        required: true
        default: 'main'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .  # Set the working directory once for all steps

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}  # Check out the specified branch

      - name: Configure AWS credentials from AWS account
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform version
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.2

      - name: Terraform Init
        id: init
        run: terraform init   # Ensure Terraform initialization is done first

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color  # Validate occurs after init

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        if: ${{ github.event.inputs.terraform-action == 'plan' }}
        run: terraform plan -var-file=gd-sh-ses.tfvars

      - name: Terraform Apply
        id: apply
        if: ${{ github.event.inputs.terraform-action == 'apply' }}
        run: terraform apply -var-file=gd-sh-ses.tfvars -auto-approve

      - name: Terraform Destroy
        id: destroy
        if: ${{ github.event.inputs.terraform-action == 'destroy' }}
        run: terraform destroy -var-file=gd-sh-ses.tfvars -auto-approve

      - name: Conclusion
        run: |
          echo "Terraform action completed successfully: ${{ github.event.inputs.terraform-action }}"
