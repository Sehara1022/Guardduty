name: "PR_PUSH_WORKFLOW"

on:
  pull_request:
    branches:
      - main  # Triggers on pull requests to the main branch
  push:
    branches:
      - main  # Triggers on pushes to the main branch (after merging)

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .  # Set the working directory once for all steps

    steps:
      - name: Git checkout
        if: github.event_name == 'pull_request'  # Only run during pull requests
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref || 'main' }}  # Use PR branch or main

      - name: Configure AWS credentials from AWS account
        if: github.event_name == 'pull_request'  # Only run during pull requests
        id: configure-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform version
        if: github.event_name == 'pull_request'  # Only run during pull requests
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.2  # You can specify any version you want here

      - name: Terraform Init
        if: github.event_name == 'pull_request'  # Only run during pull requests
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Format
        if: github.event_name == 'pull_request'  # Only run during pull requests
        id: fmt
        run: terraform fmt -check -recursive  # Check if the code is formatted correctly

      - name: Terraform Validate
        if: github.event_name == 'pull_request'  # Only run during pull requests
        id: validate
        run: terraform validate -no-color  # Validate occurs after init

      - name: Terraform Plan
        if: github.event_name == 'pull_request'  # Run plan only on pull requests
        id: plan
        run: terraform plan --target=module.lambda_function -var-file=gd-sh-ses.tfvars

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Apply only on push to main
        id: apply
        run: terraform apply --target=module.lambda_function -var-file=gd-sh-ses.tfvars -auto-approve

      - name: Conclusion
        if: ${{ always() }}  # Always runs to print a message
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "Terraform plan completed successfully."
          elif [ "${{ github.event_name }}" == "push" ]; then
            echo "Terraform apply completed after merge."
          fi
